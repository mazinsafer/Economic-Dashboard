{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f326199e-f5b7-4be3-a7ac-d2b57cfbe0f3",
   "metadata": {},
   "outputs": [],
   "source": [
    "import requests\n",
    "import json\n",
    "\n",
    "\n",
    "headers = {'Content-type': 'application/json'}\n",
    "state_series_ids = {\n",
    "    \"Alabama\": \"LAUST010000000000003\",\n",
    "    \"Alaska\": \"LAUST020000000000003\",\n",
    "    \"Arizona\": \"LAUST040000000000003\",\n",
    "    \"Arkansas\": \"LAUST050000000000003\",\n",
    "    \"California\": \"LAUST060000000000003\",\n",
    "    \"Colorado\": \"LAUST080000000000003\",\n",
    "    \"Connecticut\": \"LAUST090000000000003\",\n",
    "    \"Delaware\": \"LAUST100000000000003\",\n",
    "    \"Florida\": \"LAUST120000000000003\",\n",
    "    \"Georgia\": \"LAUST130000000000003\",\n",
    "    \"Hawaii\": \"LAUST150000000000003\",\n",
    "    \"Idaho\": \"LAUST160000000000003\",\n",
    "    \"Illinois\": \"LAUST170000000000003\",\n",
    "    \"Indiana\": \"LAUST180000000000003\",\n",
    "    \"Iowa\": \"LAUST190000000000003\",\n",
    "    \"Kansas\": \"LAUST200000000000003\",\n",
    "    \"Kentucky\": \"LAUST210000000000003\",\n",
    "    \"Louisiana\": \"LAUST220000000000003\",\n",
    "    \"Maine\": \"LAUST230000000000003\",\n",
    "    \"Maryland\": \"LAUST240000000000003\",\n",
    "    \"Massachusetts\": \"LAUST250000000000003\",\n",
    "    \"Michigan\": \"LAUST260000000000003\",\n",
    "    \"Minnesota\": \"LAUST270000000000003\",\n",
    "    \"Mississippi\": \"LAUST280000000000003\",\n",
    "    \"Missouri\": \"LAUST290000000000003\",\n",
    "    \"Montana\": \"LAUST300000000000003\",\n",
    "    \"Nebraska\": \"LAUST310000000000003\",\n",
    "    \"Nevada\": \"LAUST320000000000003\",\n",
    "    \"New Hampshire\": \"LAUST330000000000003\",\n",
    "    \"New Jersey\": \"LAUST340000000000003\",\n",
    "    \"New Mexico\": \"LAUST350000000000003\",\n",
    "    \"New York\": \"LAUST360000000000003\",\n",
    "    \"North Carolina\": \"LAUST370000000000003\",\n",
    "    \"North Dakota\": \"LAUST380000000000003\",\n",
    "    \"Ohio\": \"LAUST390000000000003\",\n",
    "    \"Oklahoma\": \"LAUST400000000000003\",\n",
    "    \"Oregon\": \"LAUST410000000000003\",\n",
    "    \"Pennsylvania\": \"LAUST420000000000003\",\n",
    "    \"Rhode Island\": \"LAUST440000000000003\",\n",
    "    \"South Carolina\": \"LAUST450000000000003\",\n",
    "    \"South Dakota\": \"LAUST460000000000003\",\n",
    "    \"Tennessee\": \"LAUST470000000000003\",\n",
    "    \"Texas\": \"LAUST480000000000003\",\n",
    "    \"Utah\": \"LAUST490000000000003\",\n",
    "    \"Vermont\": \"LAUST500000000000003\",\n",
    "    \"Virginia\": \"LAUST510000000000003\",\n",
    "    \"Washington\": \"LAUST530000000000003\",\n",
    "    \"West Virginia\": \"LAUST540000000000003\",\n",
    "    \"Wisconsin\": \"LAUST550000000000003\",\n",
    "    \"Wyoming\": \"LAUST560000000000003\"\n",
    "}\n",
    "\n",
    "\n",
    "series_ids = list(state_series_ids.values())\n",
    "data = json.dumps({\n",
    "    \"seriesid\": series_ids, \n",
    "    \"startyear\": \"2011\", \n",
    "    \"endyear\": \"2022\",\n",
    "    \"registrationkey\": \"\"\n",
    "})\n",
    "\n",
    "\n",
    "response = requests.post('https://api.bls.gov/publicAPI/v2/timeseries/data/', data=data, headers=headers)\n",
    "json_data = json.loads(response.text)\n",
    "\n",
    "months = {\n",
    "    \"M01\": \"January\", \"M02\": \"February\", \"M03\": \"March\",\n",
    "    \"M04\": \"April\", \"M05\": \"May\", \"M06\": \"June\",\n",
    "    \"M07\": \"July\", \"M08\": \"August\", \"M09\": \"September\",\n",
    "    \"M10\": \"October\", \"M11\": \"November\", \"M12\": \"December\"\n",
    "}\n",
    "\n",
    "data_rows = []\n",
    "\n",
    "for series in json_data['Results']['series']:\n",
    "    seriesId = series['seriesID']\n",
    "    state_name = list(state_series_ids.keys())[list(state_series_ids.values()).index(seriesId)]\n",
    "    \n",
    "    for item in series['data']:\n",
    "        year = item['year']\n",
    "        period = item['period']\n",
    "        periodName = months.get(period, \"Unknown Month\") \n",
    "        value = item['value']\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ef3e8c76-4730-4daa-b7c6-d850b4433870",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "\n",
    "\n",
    "state_list = []\n",
    "year_list = []\n",
    "value_list = []\n",
    "\n",
    "for series in json_data['Results']['series']:\n",
    "    seriesId = series['seriesID']\n",
    "    state_name = list(state_series_ids.keys())[list(state_series_ids.values()).index(seriesId)]\n",
    "    \n",
    "    for item in series['data']:\n",
    "        year = item['year']\n",
    "        value = float(item['value'])  \n",
    "        state_list.append(state_name)\n",
    "        year_list.append(year)\n",
    "        value_list.append(value)\n",
    "\n",
    "df_unemployment = pd.DataFrame({\n",
    "    'State': state_list,\n",
    "    'Year': year_list,\n",
    "    'Unemployment % ': value_list\n",
    "})\n",
    "\n",
    "df_unemployment = df_unemployment.groupby(['State', 'Year'], as_index=False).mean()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "e758be68-e2a7-47ab-b830-8fa34c4a008d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State</th>\n",
       "      <th>Year</th>\n",
       "      <th>Unemployment %</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>2011</td>\n",
       "      <td>9.575000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>2012</td>\n",
       "      <td>8.150000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>2013</td>\n",
       "      <td>7.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>2014</td>\n",
       "      <td>6.750000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>2015</td>\n",
       "      <td>6.141667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>595</th>\n",
       "      <td>Wyoming</td>\n",
       "      <td>2018</td>\n",
       "      <td>4.066667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>596</th>\n",
       "      <td>Wyoming</td>\n",
       "      <td>2019</td>\n",
       "      <td>3.716667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>597</th>\n",
       "      <td>Wyoming</td>\n",
       "      <td>2020</td>\n",
       "      <td>5.875000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>598</th>\n",
       "      <td>Wyoming</td>\n",
       "      <td>2021</td>\n",
       "      <td>4.550000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>599</th>\n",
       "      <td>Wyoming</td>\n",
       "      <td>2022</td>\n",
       "      <td>3.441667</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>600 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       State  Year  Unemployment % \n",
       "0    Alabama  2011         9.575000\n",
       "1    Alabama  2012         8.150000\n",
       "2    Alabama  2013         7.333333\n",
       "3    Alabama  2014         6.750000\n",
       "4    Alabama  2015         6.141667\n",
       "..       ...   ...              ...\n",
       "595  Wyoming  2018         4.066667\n",
       "596  Wyoming  2019         3.716667\n",
       "597  Wyoming  2020         5.875000\n",
       "598  Wyoming  2021         4.550000\n",
       "599  Wyoming  2022         3.441667\n",
       "\n",
       "[600 rows x 3 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_unemployment"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "b4c3e973-12ad-4d1d-9e34-6574fe486f2a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import requests\n",
    "import json\n",
    "import pandas as pd\n",
    "\n",
    "\n",
    "url_years = [\n",
    "    ('https://api.census.gov/data/2011/acs/acs5', 2011),\n",
    "    ('https://api.census.gov/data/2012/acs/acs5', 2012),\n",
    "    ('https://api.census.gov/data/2013/acs/acs5', 2013),\n",
    "    ('https://api.census.gov/data/2014/acs/acs5', 2014),\n",
    "    ('https://api.census.gov/data/2015/acs/acs5', 2015),\n",
    "    ('https://api.census.gov/data/2016/acs/acs5', 2016),\n",
    "    ('https://api.census.gov/data/2017/acs/acs5', 2017),\n",
    "    ('https://api.census.gov/data/2018/acs/acs5', 2018),\n",
    "    ('https://api.census.gov/data/2019/acs/acs5', 2019),\n",
    "    ('https://api.census.gov/data/2020/acs/acs5', 2020),\n",
    "    ('https://api.census.gov/data/2021/acs/acs5', 2021),\n",
    "    ('https://api.census.gov/data/2022/acs/acs5', 2022)\n",
    "]\n",
    "\n",
    "params = {\n",
    "    'get': 'B19013_001E,NAME',  \n",
    "    'for': 'state:*',\n",
    "    'key': \"\"\n",
    "}\n",
    "\n",
    "income_df = pd.DataFrame()\n",
    "for url, year in url_years:\n",
    "    response = requests.get(url, params=params)\n",
    "    data = response.json()\n",
    "    df = pd.DataFrame(data[1:], columns=data[0])\n",
    "    df['Year'] = year\n",
    "    income_df = pd.concat([income_df, df], ignore_index=True)\n",
    "    \n",
    "income_df.rename(columns={'B19013_001E': 'Median Household Income'}, inplace=True) \n",
    "income_df.rename(columns={\"NAME\": \"State\"}, inplace = True)\n",
    "income_df.drop(columns={\"state\"}, inplace = True)\n",
    "income_df = income_df[income_df['State'] != 'Puerto Rico']\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "0b7a64d9-25cb-430e-9da1-e145bbe8d93f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Median Household Income</th>\n",
       "      <th>State</th>\n",
       "      <th>Year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>38718</td>\n",
       "      <td>Mississippi</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>47202</td>\n",
       "      <td>Missouri</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>45324</td>\n",
       "      <td>Montana</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>50695</td>\n",
       "      <td>Nebraska</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>55553</td>\n",
       "      <td>Nevada</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>618</th>\n",
       "      <td>87249</td>\n",
       "      <td>Virginia</td>\n",
       "      <td>2022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>619</th>\n",
       "      <td>90325</td>\n",
       "      <td>Washington</td>\n",
       "      <td>2022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>620</th>\n",
       "      <td>55217</td>\n",
       "      <td>West Virginia</td>\n",
       "      <td>2022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>621</th>\n",
       "      <td>72458</td>\n",
       "      <td>Wisconsin</td>\n",
       "      <td>2022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>622</th>\n",
       "      <td>72495</td>\n",
       "      <td>Wyoming</td>\n",
       "      <td>2022</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>612 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Median Household Income          State  Year\n",
       "0                     38718    Mississippi  2011\n",
       "1                     47202       Missouri  2011\n",
       "2                     45324        Montana  2011\n",
       "3                     50695       Nebraska  2011\n",
       "4                     55553         Nevada  2011\n",
       "..                      ...            ...   ...\n",
       "618                   87249       Virginia  2022\n",
       "619                   90325     Washington  2022\n",
       "620                   55217  West Virginia  2022\n",
       "621                   72458      Wisconsin  2022\n",
       "622                   72495        Wyoming  2022\n",
       "\n",
       "[612 rows x 3 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "income_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "8a338251-82f5-430c-b19e-d9462f4e0bef",
   "metadata": {},
   "outputs": [],
   "source": [
    "import requests\n",
    "import json\n",
    "\n",
    "\n",
    "\n",
    "headers = {'Content-type': 'application/json'}\n",
    "\n",
    "state_lfpr_ids = {\n",
    "    \"Alabama\": \"LAUST010000000000006\",\n",
    "    \"Alaska\": \"LAUST020000000000006\",\n",
    "    \"Arizona\": \"LAUST040000000000006\",\n",
    "    \"Arkansas\": \"LAUST050000000000006\",\n",
    "    \"California\": \"LAUST060000000000006\",\n",
    "    \"Colorado\": \"LAUST080000000000006\",\n",
    "    \"Connecticut\": \"LAUST090000000000006\",\n",
    "    \"Delaware\": \"LAUST100000000000006\",\n",
    "    \"Florida\": \"LAUST120000000000006\",\n",
    "    \"Georgia\": \"LAUST130000000000006\",\n",
    "    \"Hawaii\": \"LAUST150000000000006\",\n",
    "    \"Idaho\": \"LAUST160000000000006\",\n",
    "    \"Illinois\": \"LAUST170000000000006\",\n",
    "    \"Indiana\": \"LAUST180000000000006\",\n",
    "    \"Iowa\": \"LAUST190000000000006\",\n",
    "    \"Kansas\": \"LAUST200000000000006\",\n",
    "    \"Kentucky\": \"LAUST210000000000006\",\n",
    "    \"Louisiana\": \"LAUST220000000000006\",\n",
    "    \"Maine\": \"LAUST230000000000006\",\n",
    "    \"Maryland\": \"LAUST240000000000006\",\n",
    "    \"Massachusetts\": \"LAUST250000000000006\",\n",
    "    \"Michigan\": \"LAUST260000000000006\",\n",
    "    \"Minnesota\": \"LAUST270000000000006\",\n",
    "    \"Mississippi\": \"LAUST280000000000006\",\n",
    "    \"Missouri\": \"LAUST290000000000006\",\n",
    "    \"Montana\": \"LAUST300000000000006\",\n",
    "    \"Nebraska\": \"LAUST310000000000006\",\n",
    "    \"Nevada\": \"LAUST320000000000006\",\n",
    "    \"New Hampshire\": \"LAUST330000000000006\",\n",
    "    \"New Jersey\": \"LAUST340000000000006\",\n",
    "    \"New Mexico\": \"LAUST350000000000006\",\n",
    "    \"New York\": \"LAUST360000000000006\",\n",
    "    \"North Carolina\": \"LAUST370000000000006\",\n",
    "    \"North Dakota\": \"LAUST380000000000006\",\n",
    "    \"Ohio\": \"LAUST390000000000006\",\n",
    "    \"Oklahoma\": \"LAUST400000000000006\",\n",
    "    \"Oregon\": \"LAUST410000000000006\",\n",
    "    \"Pennsylvania\": \"LAUST420000000000006\",\n",
    "    \"Rhode Island\": \"LAUST440000000000006\",\n",
    "    \"South Carolina\": \"LAUST450000000000006\",\n",
    "    \"South Dakota\": \"LAUST460000000000006\",\n",
    "    \"Tennessee\": \"LAUST470000000000006\",\n",
    "    \"Texas\": \"LAUST480000000000006\",\n",
    "    \"Utah\": \"LAUST490000000000006\",\n",
    "    \"Vermont\": \"LAUST500000000000006\",\n",
    "    \"Virginia\": \"LAUST510000000000006\",\n",
    "    \"Washington\": \"LAUST530000000000006\",\n",
    "    \"West Virginia\": \"LAUST540000000000006\",\n",
    "    \"Wisconsin\": \"LAUST550000000000006\",\n",
    "    \"Wyoming\": \"LAUST560000000000006\"\n",
    "}\n",
    "\n",
    "cnip_data = {\n",
    "    \"Alabama\": 3740000,\n",
    "    \"Alaska\": 556000,\n",
    "    \"Arizona\": 5338000,\n",
    "    \"Arkansas\": 2330000,\n",
    "    \"California\": 30998000,\n",
    "    \"Colorado\": 4450000,\n",
    "    \"Connecticut\": 2950000,\n",
    "    \"Delaware\": 760000,\n",
    "    \"Florida\": 18658000,\n",
    "    \"Georgia\": 8182000,\n",
    "    \"Hawaii\": 1200000,\n",
    "    \"Idaho\": 1330000,\n",
    "    \"Illinois\": 10067000,\n",
    "    \"Indiana\": 5127000,\n",
    "    \"Iowa\": 2430000,\n",
    "    \"Kansas\": 2230000,\n",
    "    \"Kentucky\": 3465000,\n",
    "    \"Louisiana\": 3720000,\n",
    "    \"Maine\": 1050000,\n",
    "    \"Maryland\": 4830000,\n",
    "    \"Massachusetts\": 5695000,\n",
    "    \"Michigan\": 7900000,\n",
    "    \"Minnesota\": 4488000,\n",
    "    \"Mississippi\": 2250000,\n",
    "    \"Missouri\": 4837000,\n",
    "    \"Montana\": 860000,\n",
    "    \"Nebraska\": 1500000,\n",
    "    \"Nevada\": 2453000,\n",
    "    \"New Hampshire\": 1100000,\n",
    "    \"New Jersey\": 7380000,\n",
    "    \"New Mexico\": 1632000,\n",
    "    \"New York\": 15800000,\n",
    "    \"North Carolina\": 8218000,\n",
    "    \"North Dakota\": 585000,\n",
    "    \"Ohio\": 9285000,\n",
    "    \"Oklahoma\": 3065000,\n",
    "    \"Oregon\": 3300000,\n",
    "    \"Pennsylvania\": 10380000,\n",
    "    \"Rhode Island\": 863000,\n",
    "    \"South Carolina\": 4060000,\n",
    "    \"South Dakota\": 686000,\n",
    "    \"Tennessee\": 5525000,\n",
    "    \"Texas\": 21172000,\n",
    "    \"Utah\": 2320000,\n",
    "    \"Vermont\": 512000,\n",
    "    \"Virginia\": 6585000,\n",
    "    \"Washington\": 5940000,\n",
    "    \"West Virginia\": 1445000,\n",
    "    \"Wisconsin\": 4660000,\n",
    "    \"Wyoming\": 445000\n",
    "}\n",
    "\n",
    "\n",
    "\n",
    "series_ids = list(state_lfpr_ids.values())\n",
    "data = json.dumps({\n",
    "    \"seriesid\": series_ids, \n",
    "    \"startyear\": \"2011\", \n",
    "    \"endyear\": \"2024\",\n",
    "    \"registrationkey\": \"\"\n",
    "})\n",
    "\n",
    "\n",
    "response = requests.post('https://api.bls.gov/publicAPI/v2/timeseries/data/', data=data, headers=headers)\n",
    "json_data = json.loads(response.text)\n",
    "\n",
    "months = {\n",
    "    \"M01\": \"January\", \"M02\": \"February\", \"M03\": \"March\",\n",
    "    \"M04\": \"April\", \"M05\": \"May\", \"M06\": \"June\",\n",
    "    \"M07\": \"July\", \"M08\": \"August\", \"M09\": \"September\",\n",
    "    \"M10\": \"October\", \"M11\": \"November\", \"M12\": \"December\"\n",
    "}\n",
    "\n",
    "\n",
    "state_list = []\n",
    "year_list = []\n",
    "value_list = []\n",
    "\n",
    "\n",
    "for series in json_data['Results']['series']:\n",
    "    seriesId = series['seriesID']\n",
    "    state_name = list(state_lfpr_ids.keys())[list(state_lfpr_ids.values()).index(seriesId)]\n",
    "    \n",
    "    for item in series['data']:\n",
    "        year = item['year']\n",
    "        labor_force = float(item['value'])  \n",
    "        cnip = cnip_data.get(state_name, None)  \n",
    "        lfpr = (labor_force / cnip) * 100  \n",
    "        state_list.append(state_name)\n",
    "        year_list.append(year)\n",
    "        value_list.append(lfpr)\n",
    "\n",
    "df = pd.DataFrame({\n",
    "    'State': state_list,\n",
    "    'Year': year_list,\n",
    "    'Labor Force Participation Rate (%)': value_list\n",
    "})\n",
    "\n",
    "\n",
    "lfpr_df = df.groupby(['State', 'Year'], as_index=False).mean()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "e0dafb5c-c12f-4b9e-8e9a-0a110661d0f0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State</th>\n",
       "      <th>Year</th>\n",
       "      <th>Labor Force Participation Rate (%)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>2011</td>\n",
       "      <td>58.886025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>2012</td>\n",
       "      <td>58.248877</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>2013</td>\n",
       "      <td>58.077587</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>2014</td>\n",
       "      <td>57.880074</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>2015</td>\n",
       "      <td>57.548001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>695</th>\n",
       "      <td>Wyoming</td>\n",
       "      <td>2020</td>\n",
       "      <td>65.978820</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>696</th>\n",
       "      <td>Wyoming</td>\n",
       "      <td>2021</td>\n",
       "      <td>64.891910</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>697</th>\n",
       "      <td>Wyoming</td>\n",
       "      <td>2022</td>\n",
       "      <td>65.767172</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>698</th>\n",
       "      <td>Wyoming</td>\n",
       "      <td>2023</td>\n",
       "      <td>66.338521</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>699</th>\n",
       "      <td>Wyoming</td>\n",
       "      <td>2024</td>\n",
       "      <td>66.062612</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>700 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       State  Year  Labor Force Participation Rate (%)\n",
       "0    Alabama  2011                           58.886025\n",
       "1    Alabama  2012                           58.248877\n",
       "2    Alabama  2013                           58.077587\n",
       "3    Alabama  2014                           57.880074\n",
       "4    Alabama  2015                           57.548001\n",
       "..       ...   ...                                 ...\n",
       "695  Wyoming  2020                           65.978820\n",
       "696  Wyoming  2021                           64.891910\n",
       "697  Wyoming  2022                           65.767172\n",
       "698  Wyoming  2023                           66.338521\n",
       "699  Wyoming  2024                           66.062612\n",
       "\n",
       "[700 rows x 3 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lfpr_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "e389d008-da88-4de3-a2e1-bcac09bd5f21",
   "metadata": {},
   "outputs": [],
   "source": [
    "import requests\n",
    "import pandas as pd\n",
    "\n",
    "\n",
    "url_years = [\n",
    "    ('https://api.census.gov/data/2011/acs/acs5', 2011),\n",
    "    ('https://api.census.gov/data/2012/acs/acs5', 2012),\n",
    "    ('https://api.census.gov/data/2013/acs/acs5', 2013),\n",
    "    ('https://api.census.gov/data/2014/acs/acs5', 2014),\n",
    "    ('https://api.census.gov/data/2015/acs/acs5', 2015),\n",
    "    ('https://api.census.gov/data/2016/acs/acs5', 2016),\n",
    "    ('https://api.census.gov/data/2017/acs/acs5', 2017),\n",
    "    ('https://api.census.gov/data/2018/acs/acs5', 2018),\n",
    "    ('https://api.census.gov/data/2019/acs/acs5', 2019),\n",
    "    ('https://api.census.gov/data/2020/acs/acs5', 2020),\n",
    "    ('https://api.census.gov/data/2021/acs/acs5', 2021),\n",
    "    ('https://api.census.gov/data/2022/acs/acs5', 2022)\n",
    "]\n",
    "poverty_df = pd.DataFrame()\n",
    "\n",
    "valid_states = [\n",
    "    \"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \n",
    "    \"Connecticut\", \"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \n",
    "    \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \n",
    "    \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \n",
    "    \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \n",
    "    \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \n",
    "    \"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \n",
    "    \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \n",
    "    \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \n",
    "    \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"\n",
    "]\n",
    "\n",
    "\n",
    "for url, year in url_years:\n",
    "    params = \n",
    "    {\n",
    "        'get': 'NAME,B17001_002E,B01003_001E',  \n",
    "        'for': 'state:*',\n",
    "        'key': \"\"\n",
    "    }\n",
    "\n",
    "    response = requests.get(url, params=params)\n",
    "    data = response.json()\n",
    "    df = pd.DataFrame(data[1:], columns=data[0])\n",
    "    df['B17001_002E'] = pd.to_numeric(df['B17001_002E'])  \n",
    "    df['B01003_001E'] = pd.to_numeric(df['B01003_001E']) \n",
    "    df['Poverty Rate (%)'] = (df['B17001_002E'] / df['B01003_001E']) * 100\n",
    "    df['Year'] = year\n",
    "    df = df[['NAME', 'Year', 'Poverty Rate (%)']]\n",
    "    poverty_df = pd.concat([poverty_df, df], ignore_index=True)\n",
    "\n",
    "poverty_df.rename(columns={'NAME': 'State'}, inplace=True)\n",
    "poverty_df = poverty_df[poverty_df['State'].isin(valid_states)]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "aed331eb-8ac4-4200-8f22-40bba8ff6d50",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State</th>\n",
       "      <th>Year</th>\n",
       "      <th>Poverty Rate (%)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Mississippi</td>\n",
       "      <td>2011</td>\n",
       "      <td>20.895086</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Missouri</td>\n",
       "      <td>2011</td>\n",
       "      <td>13.912736</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Montana</td>\n",
       "      <td>2011</td>\n",
       "      <td>14.234464</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Nebraska</td>\n",
       "      <td>2011</td>\n",
       "      <td>11.679254</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Nevada</td>\n",
       "      <td>2011</td>\n",
       "      <td>12.751684</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>618</th>\n",
       "      <td>Virginia</td>\n",
       "      <td>2022</td>\n",
       "      <td>9.701257</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>619</th>\n",
       "      <td>Washington</td>\n",
       "      <td>2022</td>\n",
       "      <td>9.722745</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>620</th>\n",
       "      <td>West Virginia</td>\n",
       "      <td>2022</td>\n",
       "      <td>16.278046</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>621</th>\n",
       "      <td>Wisconsin</td>\n",
       "      <td>2022</td>\n",
       "      <td>10.398635</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>622</th>\n",
       "      <td>Wyoming</td>\n",
       "      <td>2022</td>\n",
       "      <td>10.405084</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>600 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             State  Year  Poverty Rate (%)\n",
       "0      Mississippi  2011         20.895086\n",
       "1         Missouri  2011         13.912736\n",
       "2          Montana  2011         14.234464\n",
       "3         Nebraska  2011         11.679254\n",
       "4           Nevada  2011         12.751684\n",
       "..             ...   ...               ...\n",
       "618       Virginia  2022          9.701257\n",
       "619     Washington  2022          9.722745\n",
       "620  West Virginia  2022         16.278046\n",
       "621      Wisconsin  2022         10.398635\n",
       "622        Wyoming  2022         10.405084\n",
       "\n",
       "[600 rows x 3 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "poverty_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "d319bd5f-2313-445b-a244-43a01990be92",
   "metadata": {},
   "outputs": [],
   "source": [
    "import requests\n",
    "import pandas as pd\n",
    "\n",
    "\n",
    "url = \"https://apps.bea.gov/api/data/\"\n",
    "years = list(range(2011, 2023)) \n",
    "\n",
    "valid_states = [\n",
    "    \"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \n",
    "    \"Connecticut\", \"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \n",
    "    \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \n",
    "    \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \n",
    "    \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \n",
    "    \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \n",
    "    \"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \n",
    "    \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \n",
    "    \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \n",
    "    \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"\n",
    "]\n",
    "\n",
    "\n",
    "gdp_df = pd.DataFrame()\n",
    "\n",
    "\n",
    "for year in years:\n",
    "    params = {\n",
    "        'UserID': \"\",\n",
    "        'method': 'GetData',\n",
    "        'datasetname': 'Regional',\n",
    "        'TableName': 'SAPCE1',  \n",
    "        'LineCode': '1',\n",
    "        'Year': year,\n",
    "        'GeoFIPS': 'STATE',  \n",
    "        'ResultFormat': 'json'\n",
    "    }\n",
    "    \n",
    "    \n",
    "    response = requests.get(url, params=params)\n",
    "    data = response.json()\n",
    "    records = []\n",
    "    for record in data['BEAAPI']['Results']['Data']:\n",
    "        state = record['GeoName']\n",
    "        gdp = float(record['DataValue'].replace(',', '')) \n",
    "        records.append({'State': state, 'Year': year, 'GDP': gdp})\n",
    "        gdp_df = pd.concat([gdp_df, pd.DataFrame(records)], ignore_index=True)\n",
    "   \n",
    "\n",
    "gdp_df = gdp_df[gdp_df['State'].isin(valid_states)]\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "e70ee6a3-93fc-4dff-a502-b0ca3df82852",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State</th>\n",
       "      <th>Year</th>\n",
       "      <th>GDP</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>2011</td>\n",
       "      <td>136772.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Alaska</td>\n",
       "      <td>2011</td>\n",
       "      <td>29947.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Arizona</td>\n",
       "      <td>2011</td>\n",
       "      <td>203580.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Arkansas</td>\n",
       "      <td>2011</td>\n",
       "      <td>80992.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>California</td>\n",
       "      <td>2011</td>\n",
       "      <td>1354341.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>707</th>\n",
       "      <td>Virginia</td>\n",
       "      <td>2022</td>\n",
       "      <td>452039.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>708</th>\n",
       "      <td>Washington</td>\n",
       "      <td>2022</td>\n",
       "      <td>440420.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>709</th>\n",
       "      <td>West Virginia</td>\n",
       "      <td>2022</td>\n",
       "      <td>78923.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>710</th>\n",
       "      <td>Wisconsin</td>\n",
       "      <td>2022</td>\n",
       "      <td>290410.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>711</th>\n",
       "      <td>Wyoming</td>\n",
       "      <td>2022</td>\n",
       "      <td>30465.8</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>600 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             State  Year        GDP\n",
       "1          Alabama  2011   136772.4\n",
       "2           Alaska  2011    29947.6\n",
       "3          Arizona  2011   203580.7\n",
       "4         Arkansas  2011    80992.6\n",
       "5       California  2011  1354341.6\n",
       "..             ...   ...        ...\n",
       "707       Virginia  2022   452039.8\n",
       "708     Washington  2022   440420.2\n",
       "709  West Virginia  2022    78923.3\n",
       "710      Wisconsin  2022   290410.8\n",
       "711        Wyoming  2022    30465.8\n",
       "\n",
       "[600 rows x 3 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gdp_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "85ae9fcc-6e60-4a93-9982-630fcd82897c",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       State  Year  Job Growth (%)\n",
      "1    Alabama  2011       -7.858861\n",
      "2    Alabama  2012      -14.882507\n",
      "3    Alabama  2013      -10.020450\n",
      "4    Alabama  2014       -7.954545\n",
      "5    Alabama  2015       -9.012346\n",
      "..       ...   ...             ...\n",
      "645  Wyoming  2018       -5.426357\n",
      "646  Wyoming  2019       -8.606557\n",
      "647  Wyoming  2020       58.071749\n",
      "648  Wyoming  2021      -22.553191\n",
      "649  Wyoming  2022      -24.358974\n",
      "\n",
      "[600 rows x 3 columns]\n"
     ]
    }
   ],
   "source": [
    "import requests\n",
    "import json\n",
    "import pandas as pd\n",
    "\n",
    "headers = {'Content-type': 'application/json'}\n",
    "\n",
    "state_emp_ids = {\n",
    "    \"Alabama\": \"LAUST010000000000003\",\n",
    "    \"Alaska\": \"LAUST020000000000003\",\n",
    "    \"Arizona\": \"LAUST040000000000003\",\n",
    "    \"Arkansas\": \"LAUST050000000000003\",\n",
    "    \"California\": \"LAUST060000000000003\",\n",
    "    \"Colorado\": \"LAUST080000000000003\",\n",
    "    \"Connecticut\": \"LAUST090000000000003\",\n",
    "    \"Delaware\": \"LAUST100000000000003\",\n",
    "    \"Florida\": \"LAUST120000000000003\",\n",
    "    \"Georgia\": \"LAUST130000000000003\",\n",
    "    \"Hawaii\": \"LAUST150000000000003\",\n",
    "    \"Idaho\": \"LAUST160000000000003\",\n",
    "    \"Illinois\": \"LAUST170000000000003\",\n",
    "    \"Indiana\": \"LAUST180000000000003\",\n",
    "    \"Iowa\": \"LAUST190000000000003\",\n",
    "    \"Kansas\": \"LAUST200000000000003\",\n",
    "    \"Kentucky\": \"LAUST210000000000003\",\n",
    "    \"Louisiana\": \"LAUST220000000000003\",\n",
    "    \"Maine\": \"LAUST230000000000003\",\n",
    "    \"Maryland\": \"LAUST240000000000003\",\n",
    "    \"Massachusetts\": \"LAUST250000000000003\",\n",
    "    \"Michigan\": \"LAUST260000000000003\",\n",
    "    \"Minnesota\": \"LAUST270000000000003\",\n",
    "    \"Mississippi\": \"LAUST280000000000003\",\n",
    "    \"Missouri\": \"LAUST290000000000003\",\n",
    "    \"Montana\": \"LAUST300000000000003\",\n",
    "    \"Nebraska\": \"LAUST310000000000003\",\n",
    "    \"Nevada\": \"LAUST320000000000003\",\n",
    "    \"New Hampshire\": \"LAUST330000000000003\",\n",
    "    \"New Jersey\": \"LAUST340000000000003\",\n",
    "    \"New Mexico\": \"LAUST350000000000003\",\n",
    "    \"New York\": \"LAUST360000000000003\",\n",
    "    \"North Carolina\": \"LAUST370000000000003\",\n",
    "    \"North Dakota\": \"LAUST380000000000003\",\n",
    "    \"Ohio\": \"LAUST390000000000003\",\n",
    "    \"Oklahoma\": \"LAUST400000000000003\",\n",
    "    \"Oregon\": \"LAUST410000000000003\",\n",
    "    \"Pennsylvania\": \"LAUST420000000000003\",\n",
    "    \"Rhode Island\": \"LAUST440000000000003\",\n",
    "    \"South Carolina\": \"LAUST450000000000003\",\n",
    "    \"South Dakota\": \"LAUST460000000000003\",\n",
    "    \"Tennessee\": \"LAUST470000000000003\",\n",
    "    \"Texas\": \"LAUST480000000000003\",\n",
    "    \"Utah\": \"LAUST490000000000003\",\n",
    "    \"Vermont\": \"LAUST500000000000003\",\n",
    "    \"Virginia\": \"LAUST510000000000003\",\n",
    "    \"Washington\": \"LAUST530000000000003\",\n",
    "    \"West Virginia\": \"LAUST540000000000003\",\n",
    "    \"Wisconsin\": \"LAUST550000000000003\",\n",
    "    \"Wyoming\": \"LAUST560000000000003\"\n",
    "}\n",
    "\n",
    "series_ids = list(state_emp_ids.values())\n",
    "\n",
    "\n",
    "data = json.dumps({\n",
    "    \"seriesid\": series_ids, \n",
    "    \"startyear\": \"2010\", \n",
    "    \"endyear\": \"2022\",  \n",
    "    \"registrationkey\": \"\"\n",
    "})\n",
    "\n",
    "\n",
    "response = requests.post('https://api.bls.gov/publicAPI/v2/timeseries/data/', data=data, headers=headers)\n",
    "\n",
    "json_data = json.loads(response.text)\n",
    "\n",
    "state_list = []\n",
    "year_list = []\n",
    "emp_list = []\n",
    "\n",
    "for series in json_data['Results']['series']:\n",
    "    seriesId = series['seriesID']\n",
    "    state_name = list(state_emp_ids.keys())[list(state_emp_ids.values()).index(seriesId)]\n",
    "    \n",
    "    for item in series['data']:\n",
    "        year = item['year']\n",
    "        employment = float(item['value'])\n",
    "        state_list.append(state_name)\n",
    "        year_list.append(year)\n",
    "        emp_list.append(employment)\n",
    "\n",
    "df = pd.DataFrame({\n",
    "    'State': state_list,\n",
    "    'Year': year_list,\n",
    "    'Employment': emp_list\n",
    "})\n",
    "\n",
    "df['Year'] = pd.to_numeric(df['Year'])\n",
    "growth_df = df.groupby(['State', 'Year'], as_index=False).mean()\n",
    "growth_df['Job Growth (%)'] = growth_df.groupby('State')['Employment'].pct_change() * 100\n",
    "print(growth_df[['State', 'Year', 'Job Growth (%)']].dropna())\n",
    "growth_df.drop(columns={\"Employment\"}, inplace = True)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "baef7e39-4d20-4334-8be4-e4ae61d17065",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State</th>\n",
       "      <th>Year</th>\n",
       "      <th>Job Growth (%)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>2010</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>2011</td>\n",
       "      <td>-7.858861</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>2012</td>\n",
       "      <td>-14.882507</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>2013</td>\n",
       "      <td>-10.020450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>2014</td>\n",
       "      <td>-7.954545</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>645</th>\n",
       "      <td>Wyoming</td>\n",
       "      <td>2018</td>\n",
       "      <td>-5.426357</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>646</th>\n",
       "      <td>Wyoming</td>\n",
       "      <td>2019</td>\n",
       "      <td>-8.606557</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>647</th>\n",
       "      <td>Wyoming</td>\n",
       "      <td>2020</td>\n",
       "      <td>58.071749</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>648</th>\n",
       "      <td>Wyoming</td>\n",
       "      <td>2021</td>\n",
       "      <td>-22.553191</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>649</th>\n",
       "      <td>Wyoming</td>\n",
       "      <td>2022</td>\n",
       "      <td>-24.358974</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>650 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       State  Year  Job Growth (%)\n",
       "0    Alabama  2010             NaN\n",
       "1    Alabama  2011       -7.858861\n",
       "2    Alabama  2012      -14.882507\n",
       "3    Alabama  2013      -10.020450\n",
       "4    Alabama  2014       -7.954545\n",
       "..       ...   ...             ...\n",
       "645  Wyoming  2018       -5.426357\n",
       "646  Wyoming  2019       -8.606557\n",
       "647  Wyoming  2020       58.071749\n",
       "648  Wyoming  2021      -22.553191\n",
       "649  Wyoming  2022      -24.358974\n",
       "\n",
       "[650 rows x 3 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "growth_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "c4668eed-8e54-4a05-9581-e6f3b46d6211",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "        State  Year  Cost of Living (% Above/Below Avg)\n",
      "0     Alabama  2011                             -10.045\n",
      "1      Alaska  2011                               3.328\n",
      "2     Arizona  2011                              -0.919\n",
      "3    Arkansas  2011                             -10.665\n",
      "4  California  2011                               9.472\n"
     ]
    }
   ],
   "source": [
    "import requests\n",
    "import pandas as pd\n",
    "\n",
    "\n",
    "url = \"https://apps.bea.gov/api/data/\"\n",
    "\n",
    "years = list(range(2011, 2023))  \n",
    "valid_states = [\n",
    "    \"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \n",
    "    \"Connecticut\", \"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \n",
    "    \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \n",
    "    \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \n",
    "    \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \n",
    "    \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \n",
    "    \"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \n",
    "    \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \n",
    "    \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \n",
    "    \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"\n",
    "]\n",
    "\n",
    "cost_df = pd.DataFrame()\n",
    "\n",
    "for year in years:\n",
    "    params = {\n",
    "        'UserID': \"\",\n",
    "        'method': 'GetData',\n",
    "        'datasetname': 'Regional',\n",
    "        'TableName': 'SARPP',  \n",
    "        'LineCode': '1',  \n",
    "        'Year': year,\n",
    "        'GeoFIPS': 'STATE',  \n",
    "        'ResultFormat': 'json'\n",
    "    }\n",
    "    \n",
    "    response = requests.get(url, params=params)\n",
    "    data = response.json()\n",
    "    records = []\n",
    "    for record in data['BEAAPI']['Results']['Data']:\n",
    "        state = record['GeoName']\n",
    "        if state != \"United States\": \n",
    "            cost_of_living = float(record['DataValue'].replace(',', '')) \n",
    "            records.append({'State': state, 'Year': year, 'Cost of Living (% Above/Below Avg)': cost_of_living - 100})\n",
    "    cost_df = pd.concat([cost_df, pd.DataFrame(records)], ignore_index=True)\n",
    "   \n",
    "print(cost_df.head())\n",
    "\n",
    "cost_df = cost_df[cost_df['State'] != 'United States']\n",
    "\n",
    "cost_df = cost_df[cost_df['State'].isin(valid_states)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "4c1c2072-3038-473d-9948-5afc44ea5a08",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State</th>\n",
       "      <th>Year</th>\n",
       "      <th>Cost of Living (% Above/Below Avg)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>2011</td>\n",
       "      <td>-10.045</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Alaska</td>\n",
       "      <td>2011</td>\n",
       "      <td>3.328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Arizona</td>\n",
       "      <td>2011</td>\n",
       "      <td>-0.919</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Arkansas</td>\n",
       "      <td>2011</td>\n",
       "      <td>-10.665</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>California</td>\n",
       "      <td>2011</td>\n",
       "      <td>9.472</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>607</th>\n",
       "      <td>Virginia</td>\n",
       "      <td>2022</td>\n",
       "      <td>2.137</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>608</th>\n",
       "      <td>Washington</td>\n",
       "      <td>2022</td>\n",
       "      <td>9.849</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>609</th>\n",
       "      <td>West Virginia</td>\n",
       "      <td>2022</td>\n",
       "      <td>-10.755</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>610</th>\n",
       "      <td>Wisconsin</td>\n",
       "      <td>2022</td>\n",
       "      <td>-7.690</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>611</th>\n",
       "      <td>Wyoming</td>\n",
       "      <td>2022</td>\n",
       "      <td>-8.097</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>600 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             State  Year  Cost of Living (% Above/Below Avg)\n",
       "0          Alabama  2011                             -10.045\n",
       "1           Alaska  2011                               3.328\n",
       "2          Arizona  2011                              -0.919\n",
       "3         Arkansas  2011                             -10.665\n",
       "4       California  2011                               9.472\n",
       "..             ...   ...                                 ...\n",
       "607       Virginia  2022                               2.137\n",
       "608     Washington  2022                               9.849\n",
       "609  West Virginia  2022                             -10.755\n",
       "610      Wisconsin  2022                              -7.690\n",
       "611        Wyoming  2022                              -8.097\n",
       "\n",
       "[600 rows x 3 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cost_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "b66ed0f8-65f4-4e26-9b06-937a53c9d350",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "\n",
    "dfs = [df_unemployment, income_df, lfpr_df, poverty_df, gdp_df, cost_df, growth_df]\n",
    "\n",
    "for df in dfs:\n",
    "    df['Year'] = pd.to_numeric(df['Year'], errors='coerce')\n",
    "    \n",
    "final_df = df_unemployment.merge(income_df, on=['State', 'Year'], how='inner')\\\n",
    "                          .merge(lfpr_df, on=['State', 'Year'], how='inner')\\\n",
    "                          .merge(poverty_df, on=['State', 'Year'], how='inner')\\\n",
    "                          .merge(gdp_df, on=['State', 'Year'], how='inner')\\\n",
    "                          .merge(cost_df, on=['State', 'Year'], how='inner')\\\n",
    "                          .merge(growth_df, on=['State', 'Year'], how='inner')\n",
    "\n",
    "final_df = final_df.head(600)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "a386ea64-f9ed-4187-bf3a-2c96df94dbeb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State</th>\n",
       "      <th>Year</th>\n",
       "      <th>Unemployment %</th>\n",
       "      <th>Median Household Income</th>\n",
       "      <th>Labor Force Participation Rate (%)</th>\n",
       "      <th>Poverty Rate (%)</th>\n",
       "      <th>GDP</th>\n",
       "      <th>Cost of Living (% Above/Below Avg)</th>\n",
       "      <th>Job Growth (%)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>2011</td>\n",
       "      <td>9.575000</td>\n",
       "      <td>42934</td>\n",
       "      <td>58.886025</td>\n",
       "      <td>17.133186</td>\n",
       "      <td>136772.4</td>\n",
       "      <td>-10.045</td>\n",
       "      <td>-7.858861</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>2012</td>\n",
       "      <td>8.150000</td>\n",
       "      <td>43160</td>\n",
       "      <td>58.248877</td>\n",
       "      <td>17.631035</td>\n",
       "      <td>139950.6</td>\n",
       "      <td>-9.485</td>\n",
       "      <td>-14.882507</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>2013</td>\n",
       "      <td>7.333333</td>\n",
       "      <td>43253</td>\n",
       "      <td>58.077587</td>\n",
       "      <td>18.140878</td>\n",
       "      <td>143956.7</td>\n",
       "      <td>-9.727</td>\n",
       "      <td>-10.020450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>2014</td>\n",
       "      <td>6.750000</td>\n",
       "      <td>43511</td>\n",
       "      <td>57.880074</td>\n",
       "      <td>18.467610</td>\n",
       "      <td>148385.6</td>\n",
       "      <td>-9.863</td>\n",
       "      <td>-7.954545</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>2015</td>\n",
       "      <td>6.141667</td>\n",
       "      <td>43623</td>\n",
       "      <td>57.548001</td>\n",
       "      <td>18.367415</td>\n",
       "      <td>152790.5</td>\n",
       "      <td>-10.294</td>\n",
       "      <td>-9.012346</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>595</th>\n",
       "      <td>Wyoming</td>\n",
       "      <td>2018</td>\n",
       "      <td>4.066667</td>\n",
       "      <td>62268</td>\n",
       "      <td>65.759438</td>\n",
       "      <td>10.881245</td>\n",
       "      <td>24652.3</td>\n",
       "      <td>-7.655</td>\n",
       "      <td>-5.426357</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>596</th>\n",
       "      <td>Wyoming</td>\n",
       "      <td>2019</td>\n",
       "      <td>3.716667</td>\n",
       "      <td>64049</td>\n",
       "      <td>66.066816</td>\n",
       "      <td>10.715048</td>\n",
       "      <td>25235.7</td>\n",
       "      <td>-5.892</td>\n",
       "      <td>-8.606557</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>597</th>\n",
       "      <td>Wyoming</td>\n",
       "      <td>2020</td>\n",
       "      <td>5.875000</td>\n",
       "      <td>65304</td>\n",
       "      <td>65.978820</td>\n",
       "      <td>10.493887</td>\n",
       "      <td>25579.8</td>\n",
       "      <td>-8.174</td>\n",
       "      <td>58.071749</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>598</th>\n",
       "      <td>Wyoming</td>\n",
       "      <td>2021</td>\n",
       "      <td>4.550000</td>\n",
       "      <td>68002</td>\n",
       "      <td>64.891910</td>\n",
       "      <td>10.488675</td>\n",
       "      <td>28312.5</td>\n",
       "      <td>-8.511</td>\n",
       "      <td>-22.553191</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>599</th>\n",
       "      <td>Wyoming</td>\n",
       "      <td>2022</td>\n",
       "      <td>3.441667</td>\n",
       "      <td>72495</td>\n",
       "      <td>65.767172</td>\n",
       "      <td>10.405084</td>\n",
       "      <td>30465.8</td>\n",
       "      <td>-8.097</td>\n",
       "      <td>-24.358974</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>600 rows Ã— 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       State  Year  Unemployment %  Median Household Income  \\\n",
       "0    Alabama  2011         9.575000                   42934   \n",
       "1    Alabama  2012         8.150000                   43160   \n",
       "2    Alabama  2013         7.333333                   43253   \n",
       "3    Alabama  2014         6.750000                   43511   \n",
       "4    Alabama  2015         6.141667                   43623   \n",
       "..       ...   ...              ...                     ...   \n",
       "595  Wyoming  2018         4.066667                   62268   \n",
       "596  Wyoming  2019         3.716667                   64049   \n",
       "597  Wyoming  2020         5.875000                   65304   \n",
       "598  Wyoming  2021         4.550000                   68002   \n",
       "599  Wyoming  2022         3.441667                   72495   \n",
       "\n",
       "     Labor Force Participation Rate (%)  Poverty Rate (%)       GDP  \\\n",
       "0                             58.886025         17.133186  136772.4   \n",
       "1                             58.248877         17.631035  139950.6   \n",
       "2                             58.077587         18.140878  143956.7   \n",
       "3                             57.880074         18.467610  148385.6   \n",
       "4                             57.548001         18.367415  152790.5   \n",
       "..                                  ...               ...       ...   \n",
       "595                           65.759438         10.881245   24652.3   \n",
       "596                           66.066816         10.715048   25235.7   \n",
       "597                           65.978820         10.493887   25579.8   \n",
       "598                           64.891910         10.488675   28312.5   \n",
       "599                           65.767172         10.405084   30465.8   \n",
       "\n",
       "     Cost of Living (% Above/Below Avg)  Job Growth (%)  \n",
       "0                               -10.045       -7.858861  \n",
       "1                                -9.485      -14.882507  \n",
       "2                                -9.727      -10.020450  \n",
       "3                                -9.863       -7.954545  \n",
       "4                               -10.294       -9.012346  \n",
       "..                                  ...             ...  \n",
       "595                              -7.655       -5.426357  \n",
       "596                              -5.892       -8.606557  \n",
       "597                              -8.174       58.071749  \n",
       "598                              -8.511      -22.553191  \n",
       "599                              -8.097      -24.358974  \n",
       "\n",
       "[600 rows x 9 columns]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "44c8238c-80cf-454a-8767-e83469f83df7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: sqlalchemy in c:\\users\\mazin\\anaconda4\\lib\\site-packages (2.0.30)\n",
      "Requirement already satisfied: typing-extensions>=4.6.0 in c:\\users\\mazin\\anaconda4\\lib\\site-packages (from sqlalchemy) (4.11.0)\n",
      "Requirement already satisfied: greenlet!=0.4.17 in c:\\users\\mazin\\anaconda4\\lib\\site-packages (from sqlalchemy) (3.0.1)\n",
      "Requirement already satisfied: pymysql in c:\\users\\mazin\\anaconda4\\lib\\site-packages (1.1.1)\n"
     ]
    }
   ],
   "source": [
    "!pip install sqlalchemy\n",
    "!pip install pymysql"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "d7d46c41-7390-48c1-bca9-3e17ece86831",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "134"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "from sqlalchemy import create_engine\n",
    "\n",
    "server = 'localhost'  \n",
    "database = 'master'\n",
    "\n",
    "connection_string = f'mssql+pyodbc://@{server}/{database}?driver=ODBC+Driver+17+for+SQL+Server&trusted_connection=yes'\n",
    "\n",
    "\n",
    "engine = create_engine(connection_string)\n",
    "\n",
    "final_df.to_sql('financial_data', con=engine, if_exists='replace', index=False)\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "271ae216-54bf-4fe2-a1c7-0831a30466c2",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
